// Code generated by github.com/fjl/gencodec. DO NOT EDIT.

package types

import (
	"encoding/json"
	"errors"
)

// MarshalJSON marshals as JSON.
func (s SyncAggregate) MarshalJSON() ([]byte, error) {
	type SyncAggregate struct {
		Signers    [16]byte     `gencodec:"required" json:"sync_committee_bits"`
		Signatures [][4595]byte `gencodec:"required" json:"sync_committee_signatures"`
	}
	var enc SyncAggregate
	enc.Signers = s.Signers
	enc.Signatures = s.Signatures
	return json.Marshal(&enc)
}

// UnmarshalJSON unmarshals from JSON.
func (s *SyncAggregate) UnmarshalJSON(input []byte) error {
	type SyncAggregate struct {
		Signers    *[16]byte    `gencodec:"required" json:"sync_committee_bits"`
		Signatures [][4595]byte `gencodec:"required" json:"sync_committee_signatures"`
	}
	var dec SyncAggregate
	if err := json.Unmarshal(input, &dec); err != nil {
		return err
	}
	if dec.Signers == nil {
		return errors.New("missing required field 'sync_committee_bits' for SyncAggregate")
	}
	s.Signers = *dec.Signers
	if dec.Signatures == nil {
		return errors.New("missing required field 'sync_committee_signatures' for SyncAggregate")
	}
	s.Signatures = dec.Signatures
	return nil
}
