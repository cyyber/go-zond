// Copyright 2016 The go-ethereum Authors
// This file is part of the go-ethereum library.
//
// The go-ethereum library is free software: you can redistribute it and/or modify
// it under the terms of the GNU Lesser General Public License as published by
// the Free Software Foundation, either version 3 of the License, or
// (at your option) any later version.
//
// The go-ethereum library is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
// GNU Lesser General Public License for more details.
//
// You should have received a copy of the GNU Lesser General Public License
// along with the go-ethereum library. If not, see <http://www.gnu.org/licenses/>.

package types

import (
	"errors"
	"math/big"
	"testing"

	"github.com/theQRL/go-zond/common"
	"github.com/theQRL/go-zond/crypto"
	"github.com/theQRL/go-zond/rlp"
)

func TestShaghaiSigning(t *testing.T) {
	key, _ := crypto.GenerateMLDSA87Key()
	addr := common.Address(key.GetAddress())

	signer := NewShanghaiSigner(big.NewInt(18))
	tx, err := SignTx(NewTx(&DynamicFeeTx{Nonce: 0, To: &addr, Value: new(big.Int), Gas: 0, GasFeeCap: new(big.Int), Data: nil}), signer, key)
	if err != nil {
		t.Fatal(err)
	}

	from, err := Sender(signer, tx)
	if err != nil {
		t.Fatal(err)
	}
	if from != addr {
		t.Errorf("exected from and address to be equal. Got %x want %x", from, addr)
	}
}

func TestEIP155ChainId(t *testing.T) {
	key, _ := crypto.GenerateMLDSA87Key()
	addr := common.Address(key.GetAddress())

	signer := NewShanghaiSigner(big.NewInt(18))
	tx, err := SignTx(NewTx(&DynamicFeeTx{Nonce: 0, To: &addr, Value: new(big.Int), Gas: 0, GasFeeCap: new(big.Int), Data: nil}), signer, key)
	if err != nil {
		t.Fatal(err)
	}

	if tx.ChainId().Cmp(signer.ChainID()) != 0 {
		t.Error("expected chainId to be", signer.ChainID(), "got", tx.ChainId())
	}
}

func TestShaghaiSigningVitalik(t *testing.T) {
	// TODO(rgeraldes24)
	t.Skip()
	// NOTE(rgeraldes24): url not working; original test vectors are not of much use
	// Test vectors come from http://vitalik.ca/files/eip155_testvec.txt
	for i, test := range []struct {
		txRlp, addr string
	}{
		{"", "Q20B045A50E3C97dcf002eeFed02dB2dB22AE92A0"},
	} {
		signer := NewShanghaiSigner(big.NewInt(1))

		var tx *Transaction
		err := rlp.DecodeBytes(common.Hex2Bytes(test.txRlp), &tx)
		if err != nil {
			t.Errorf("%d: %v", i, err)
			continue
		}

		from, err := Sender(signer, tx)
		if err != nil {
			t.Errorf("%d: %v", i, err)
			continue
		}

		addr, _ := common.NewAddressFromString(test.addr)
		if from != addr {
			t.Errorf("%d: expected %x got %x", i, addr, from)
		}
	}
}

func TestChainId(t *testing.T) {
	key, _ := defaultTestKey()

	tx := NewTx(&DynamicFeeTx{Nonce: 0, To: &common.Address{}, Value: new(big.Int), Gas: 0, GasFeeCap: new(big.Int), Data: nil})

	var err error
	tx, err = SignTx(tx, NewShanghaiSigner(big.NewInt(1)), key)
	if err != nil {
		t.Fatal(err)
	}

	_, err = Sender(NewShanghaiSigner(big.NewInt(2)), tx)
	if !errors.Is(err, ErrInvalidChainId) {
		t.Error("expected error:", ErrInvalidChainId, err)
	}

	_, err = Sender(NewShanghaiSigner(big.NewInt(1)), tx)
	if err != nil {
		t.Error("expected no error")
	}
}
